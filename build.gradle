buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		jcenter()
		mavenCentral()
		flatDir {
			dirs 'libs'
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'war'

jar {
	baseName = 'webstore'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	flatDir {
		dirs 'libs'
	}


}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa:1.4.1.RELEASE')
	compile('net.sourceforge.nekohtml:nekohtml:1.9.22')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf:1.4.1.RELEASE')
	compile('org.springframework.hateoas:spring-hateoas:0.21.0.RELEASE')
	compile("org.springframework.boot:spring-boot-devtools")
	compile("javax.mail:javax.mail-api:1.5.6")
	compile("com.sun.mail:javax.mail:1.5.6")
	compile("javax.activation:activation:1.1.1")
	compile("org.springframework.boot:spring-boot-devtools")
	compile('org.springframework.boot:spring-boot-starter-web:1.4.1.RELEASE'){
		exclude module:'spring-boot-starter-tomcat'
		exclude module:'spring-boot-legacy'
	}
	compile('org.codehaus.jettison:jettison:1.3.8')
	compile fileTree(dir: 'lib', include: ['*.jar'])
	providedRuntime('org.springframework.boot:spring-boot-legacy:1.0.2.RELEASE')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	providedRuntime('javax.servlet:jstl:1.2')
    compile('mysql:mysql-connector-java:5.1.3')
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test:1.5.4.RELEASE')
	testCompile('com.h2database:h2:1.4.196')

}
group 'com'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

test {
	useJUnit {
		exclude '**/*IT.class'
	}
}

task integrationTest(type: Test) {
	useJUnit {
		include '**/*IT.class'
	}
}